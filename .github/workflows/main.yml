name: Fetch Commit History

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  fetch-commit-history:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get members of "gdsc" organization
        id: get-members
        run: |
          # 임시 더미데이터 사용
          members=("donggook-me")

      - name: Fetch commit history for each member
        id: fetch-commit-history
        run: |
          set -x
          commit_data="{}"
          
          for member in "${members[@]}"; do
            echo "Fetching commit history for $member..."
            member_commits=$(curl -sSL -H "Authorization: ***" "https://api.github.com/users/${member}/events")
            echo "Raw member_commits data: $member_commits"
      
            if [[ $(echo "$member_commits" | jq length) -gt 0 ]]; then
              # Extracting commit-related data (commit message, time)
              commits_data=$(echo "$member_commits" | jq -r '.[].payload.commits[] | {commitMessage: .message, commitTime: .timestamp }')
              echo "Raw commits_data: $commits_data"
      
              # Check if the commits_data is not empty
              if [ -n "$commits_data" ]; then
                # Append the commit data to the member's entry in commit_data
                commit_data=$(echo "$commit_data" | jq --arg member "$member" --argjson commits "$commits_data" '.[$member] += $commits')
                echo "Commit data for $member: $commit_data"
              else
                echo "No commits for $member in this period."
              fi
            else
              echo "No events found for $member."
            fi
          done
          
          echo "Final commit data: $commit_data"
          echo "$commit_data" > data/data.json
        shell: /usr/bin/bash -e {0}



      - name: Commit and push fetched data to repository
        run: |
          cd $GITHUB_WORKSPACE
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

          if [[ -n $(git status --porcelain) ]]; then
            git add data
            git commit -m "Update commit data"
            git push origin main
          fi
